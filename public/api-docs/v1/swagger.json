{
  "openapi": "3.0.1",
  "info": {
    "title": "Zuckerbook API",
    "version": "v1",
    "description": "API for Zuckerbook",
    "contact": {
      "name": "Creator",
      "email": "ming.crepuscular@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer_auth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User ID"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "name": {
            "type": "string",
            "description": "User name"
          },
          "sign_in_count": {
            "type": "integer",
            "description": "Number of sign ins"
          },
          "current_sign_in_at": {
            "type": "string",
            "format": "date-time",
            "description": "Current sign in time"
          },
          "last_sign_in_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last sign in time"
          }
        }
      },
      "UserRegistration": {
        "type": "object",
        "required": ["name", "email", "password", "password_confirmation"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "Password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "Password confirmation"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "description": "Password"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "current_password": {
            "type": "string",
            "description": "Current password (required for email/password changes)"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "New password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "New password confirmation"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "description": "HTTP status code"
              },
              "message": {
                "type": "string",
                "description": "Response message"
              }
            }
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "token": {
                "type": "string",
                "description": "JWT token for authentication"
              }
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Error messages"
          }
        }
      }
    }
  },
  "paths": {
    "/api/auth/sign_up": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/UserRegistration"
                  }
                }
              },
              "example": {
                "user": {
                  "name": "John Doe",
                  "email": "john@example.com",
                  "password": "password123",
                  "password_confirmation": "password123"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "status": {
                    "code": 200,
                    "message": "Signed up successfully."
                  },
                  "data": {
                    "user": {
                      "id": 1,
                      "email": "john@example.com",
                      "name": "John Doe",
                      "sign_in_count": 1,
                      "current_sign_in_at": "2024-01-01T12:00:00.000Z",
                      "last_sign_in_at": null
                    },
                    "token": "eyJhbGciOiJIUzI1NiJ9..."
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "status": {
                    "code": 422,
                    "message": "Sign up failed."
                  },
                  "errors": [
                    "Email has already been taken",
                    "Password confirmation doesn't match Password"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign_in": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Sign in user",
        "description": "Authenticate user and return JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/UserLogin"
                  }
                }
              },
              "example": {
                "user": {
                  "email": "john@example.com",
                  "password": "password123"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "status": {
                    "code": 200,
                    "message": "Signed in successfully."
                  },
                  "data": {
                    "user": {
                      "id": 1,
                      "email": "john@example.com",
                      "name": "John Doe",
                      "sign_in_count": 2,
                      "current_sign_in_at": "2024-01-01T12:00:00.000Z",
                      "last_sign_in_at": "2024-01-01T10:00:00.000Z"
                    },
                    "token": "eyJhbGciOiJIUzI1NiJ9..."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "status": {
                    "code": 401,
                    "message": "Invalid email or password."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign_out": {
      "delete": {
        "tags": ["Authentication"],
        "summary": "Sign out user",
        "description": "Sign out user and invalidate JWT token",
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User signed out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "status": {
                    "code": 200,
                    "message": "Signed out successfully."
                  }
                }
              }
            }
          },
          "401": {
            "description": "No active session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "status": {
                    "code": 401,
                    "message": "Couldn't find an active session."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/account_update": {
      "put": {
        "tags": ["Authentication"],
        "summary": "Update user account",
        "description": "Update user account information",
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/UserUpdate"
                  }
                }
              },
              "example": {
                "user": {
                  "name": "Updated Name",
                  "email": "updated@example.com"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "status": {
                    "code": 200,
                    "message": "Account updated successfully."
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "status": {
                    "code": 422,
                    "message": "Account update failed."
                  },
                  "errors": [
                    "Email has already been taken"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/account_delete": {
      "delete": {
        "tags": ["Authentication"],
        "summary": "Delete user account",
        "description": "Permanently delete user account",
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "status": {
                    "code": 200,
                    "message": "Account deleted successfully."
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
